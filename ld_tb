	DataPath DUT(.clock(clock), .clear(clear), 
		     .R1in(R1in), .R2in(R2in), .R3in(R3in),
			  .R2out(R2out), .R3out(R3out),  
		     .MDRin(MDRin), 
		     .MARin(MARin), .PCin(PCin), .MD_read(Read),
		     .Zlowin(Zlowin), .Zlowout(Zlowout), .IncPC(IncPC), .Yin(Yin), .IRin(IRin),  
		     .Mdatain(Mdatain), .MDRout(MDRout)); // have not altered the datapath yet, not sure if the RAM should be added

	RAM RAM(.clock(clock), .address(address), .DataIn(DataIn), .DataOut(DataOut), .Read(enable), .Write(write)); //pretty sure these are assigned correctly based on the structure of the RAM module  

	initial
		begin
		   clock = 0;
			clear = 0;
		   forever #10 clock = ~ clock;
		end       



	    T0: begin // see if you need to de-assert these signals
                    #10 PCout <= 1; MARin <= 1; IncPC <= 1; Zlowin <= 1;
		    #15 PCout <= 0; MARin <= 0; IncPC <= 0; Zlowin <= 0;			  
            end

            T1: begin
                    #10 Zlowout <= 1; PCin <= 1; Read <= 1; MDRin <= 1;
		    #15 Zlowout <= 0; PCin <= 0; Read <= 0; MDRin <= 0;
            end

            T2: begin
                    #10 MDRout <= 1; IRin <= 1;
		    #15 MDRout <= 0; IRin <= 0;
            end

            T3: begin
                    #10 Grb <= 1; BAout <= 1; Yin <= 1;
		    #15 Grb <= 0; BAout <= 0; Yin <= 0;
            end

            T4: begin
                    #10 Cout <= 1; ADD <= 1; Zlowin <= 1;
		    #15 Cout <= 0; ADD <= 0; Zlowin <= 0;
            end

            T5: begin
                    #10 Zlowout <= 1; MARin <= 1;
		    #15 Zlowout <= 0; MARin <= 0;
            end

            T6: begin
                    #10 Read <= 1; MDRin <= 1;
		    #15 Read <= 0; MDRin <= 0;
            end

            T7: begin
                    #10 MDRout <= 1; Gra <= 1; Rin <= 1;
		    #15 MDRout <= 0; Gra <= 0; Rin <= 0;
            end
